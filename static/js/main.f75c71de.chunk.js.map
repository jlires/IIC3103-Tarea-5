{"version":3,"sources":["rick.png","morty.png","components/Cards.js","api.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EpisodeCard","className","this","props","episode","name","substring","length","air_date","Component","CharacterCard","character","status","LocationCard","location","type","API2","searchEpisode","filter","page","parameters","fetch","method","headers","body","JSON","stringify","query","then","response","json","console","log","searchCharacter","searchLocation","getCharacter","id","getEpisode","getLocation","EpisodeDetail","state","characters","data","setState","prevProps","prevState","header","previous","onClick","goPrevious","currentPages","map","ch","addPage","CharacterDetail","species","gender","origin","image","src","alt","ep","LocationDetail","dimension","residents","re","App","searchValue","pagination","maxPageLocations","maxPageCharacters","maxPageEpisodes","loadingCharacters","loadingLocations","loadingEpisodes","data_locations","data_characters","data_episodes","pages","checkedFilters","Map","handleOnChange","event","target","value","searchAll","handleFilterChange","item","isChecked","checked","set","popPage","newPages","pop","bind","window","addEventListener","debounce","updateAll","jsonData","episodes","info","results","x","catch","err","locations","current","get","require","placeholder","onChange","key","renderSearchResults","style","textAlign","size","color","loading","renderDetailPages","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f75c71de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick.82926b7d.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.f5fa4799.png\";","import React, { Component } from 'react';\n\nexport  class EpisodeCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-primary\">Episode</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.episode.episode} - {this.props.episode.name.substring(0, 15)}{(this.props.episode.name.length > 15)? \"...\":\"\"}</h6>\n          <p className=\"card-text\">{this.props.episode.air_date}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class CharacterCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-light\">Character</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.character.name}</h6>\n          <p className=\"card-text\">{this.props.character.status}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class LocationCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-warning\">Location</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.location.name} - {this.props.location.type}</h6>\n        </div>\n      </div>\n    );\n  }\n}\n","const API2 = 'https://integracion-rick-morty-api.herokuapp.com/graphql';\n\nexport const searchEpisode = (filter, page) => {\n  let parameters = `page: ${page}`;\n  if (filter) parameters = parameters + `, filter: {name:\"${filter}\"}`;\n\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n          query {\n            episodes(${parameters}) {\n              info {\n                count\n                pages\n              }\n              results {\n                id\n                name\n                air_date\n                episode\n                characters {\n                  id\n                  name\n                }\n              }\n            }\n          }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else {\n        return response.json(); }\n    })\n  )\n}\n\nexport const searchCharacter = (filter, page) => {\n  let parameters = `page: ${page}`;\n  if (filter) parameters = parameters + `, filter: {name:\"${filter}\"}`;\n\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n        query {\n          characters(${parameters}) {\n            info {\n              count\n              pages\n            }\n            results {\n              id\n              name\n              status\n              species\n              type\n              gender\n              origin {\n                name\n                id\n              }\n              location {\n                  name\n                  id\n              }\n              image\n              episode {\n                id\n              }\n            }\n          }\n        }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const searchLocation = (filter, page) => {\n  let parameters = `page: ${page}`;\n  if (filter) parameters = parameters + `, filter: {name:\"${filter}\"}`;\n\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n        query {\n          locations(${parameters}) {\n            info {\n              count\n              pages\n            }\n            results {\n              id\n              name\n              type\n              dimension\n            }\n          }\n        }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const getCharacter = (id) => {\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n        query {\n          character(id:${id}) {\n            id\n            name\n            status\n            species\n            type\n            gender\n            origin {\n              name\n              id\n            }\n            location {\n                name\n                id\n            }\n            image\n            episode {\n              id\n              name\n            }\n          }\n        }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const getEpisode = (id) => {\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n        query {\n          episode(id:${id}) {\n            id\n            name\n            air_date\n            characters {\n              id\n              name\n            }\n          }\n        }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const getLocation = (id) => {\n  return(\n    fetch(API2, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        query: `\n        query {\n          location(id:${id}) {\n            id\n            name\n            type\n            dimension\n            residents {\n              id\n              name\n            }\n          }\n        }\n        `\n      }),\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        console.log(response.status);\n        //throw new Error(\"404\");\n      }\n      else { return response.json(); }\n    })\n  )\n}\n","import React, { Component } from 'react';\nimport { getCharacter, getEpisode, getLocation } from '../api';\n\nexport class EpisodeDetail extends Component {\n  state = {\n    id: null,\n    name: \"\",\n    air_date: \"\",\n    characters: []\n  };\n\n  componentDidMount() {\n    getEpisode(this.props.data.id)\n    .then(data => {\n      this.setState(data.data.episode);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getEpisode(this.props.data.id)\n      .then(data => {\n        this.setState(data.data.episode);\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i className=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.state.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.state.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-muted\">{this.state.episode}</h5>\n          <p className=\"card-text\">{this.state.air_date}</p>\n          <p className=\"card-text\"><strong>Characters:</strong></p>\n          <ul>\n            {this.state.characters.map((ch) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", ch, this.props.currentPages)}}>{ch.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class CharacterDetail extends Component {\n  state = {\n    id: null,\n    name: \"\",\n    status: \"\",\n    species: \"\",\n    type: \"\",\n    gender: \"\",\n    origin: {\n      name: \"\",\n      id: null\n    },\n    location: {\n      name: \"\",\n      id: null\n    },\n    image: \"\",\n    episode: []\n  };\n\n  componentDidMount() {\n    getCharacter(this.props.data.id)\n    .then(data => {\n      this.setState(data.data.character);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getCharacter(this.props.data.id)\n      .then(data => {\n        this.setState(data.data.character);\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i className=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.state.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.state.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n\n            <div className=\"col-sm-6\">\n              <p className=\"card-text\"><strong>Status:</strong> {this.state.status}</p>\n              <p className=\"card-text\"><strong>Species:</strong> {this.state.species}</p>\n              <p className=\"card-text\"><strong>Type:</strong> {this.state.type}</p>\n              <p className=\"card-text\"><strong>Gender:</strong> {this.state.gender}</p>\n              <p className=\"card-text\">\n                <strong>Origin: </strong>\n                {this.state.origin.id ?\n                  <strong className=\"text-link\"\n                     onClick={() => {this.props.addPage(\"location\", this.state.origin, this.props.currentPages)}}>\n                     {this.state.origin.name}\n                  </strong>\n                :\n                  <strong className=\"\">{this.state.origin.name}</strong>\n                }\n              </p>\n              <p className=\"card-text\">\n                <strong>Location: </strong>\n                {this.state.location.id ?\n                  <strong className=\"text-link\"\n                     onClick={() => {this.props.addPage(\"location\", this.state.location, this.props.currentPages)}}>\n                     {this.state.location.name}\n                  </strong>\n                :\n                  <strong className=\"\">{this.state.origin.name}</strong>\n                }\n              </p>\n            </div>\n            {this.state.location.id ?\n            <div className=\"col-sm-6\">\n              <img src={this.state.image} alt={this.state.name}/>\n            </div>\n            :\n            <div className=\"col-sm-6\">\n              <img src={this.state.image} alt={this.state.name}/>\n            </div>\n            }\n          </div>\n          <br/>\n          <p className=\"card-text\"><strong>Episodes:</strong></p>\n          <ul>\n            {this.state.episode.map((ep) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"episode\", ep, this.props.currentPages)}}>{ep.episode} - {ep.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class LocationDetail extends Component {\n  state = {\n    id: null,\n    name: \"\",\n    type: \"\",\n    dimension: \"\",\n    air_date: \"\",\n    residents: []\n  };\n\n  componentDidMount() {\n    getLocation(this.props.data.id)\n    .then(data => {\n      this.setState(data.data.location);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getLocation(this.props.data.id)\n      .then(data => {\n        this.setState(data.data.location);\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i className=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.state.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.state.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\"><strong>Type:</strong> {this.state.type}</p>\n          <p className=\"card-text\"><strong>Dimension:</strong> {this.state.dimension}</p>\n          <p className=\"card-text\"><strong>Residents:</strong></p>\n          <ul>\n            {this.state.residents.map((re) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", re, this.props.currentPages)}}>{re.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport {debounce} from 'lodash';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { EpisodeCard, CharacterCard, LocationCard } from './components/Cards';\nimport { EpisodeDetail, CharacterDetail, LocationDetail} from './components/Details';\n\nimport { searchEpisode, searchCharacter, searchLocation } from './api';\n\n\nclass App extends Component{\n  state = {\n    searchValue: \"\",\n    pagination: 1,\n\n    maxPageLocations: 1,\n    maxPageCharacters: 1,\n    maxPageEpisodes: 1,\n\n    loadingCharacters: false,\n    loadingLocations: false,\n    loadingEpisodes: false,\n\n    data_locations: [],\n    data_characters: [],\n    data_episodes: [],\n\n    pages: [],\n    checkedFilters: new Map([[\"check-1-episode\", true],\n                             [\"check-2-character\", false],\n                             [\"check-3-location\", false],])\n  };\n\n  constructor(props){\n    super(props);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleOnChange = event => {\n    this.setState({ pagination: 1, data: [] });\n    this.setState({ searchValue: event.target.value }, () => { this.searchAll() });\n  }\n\n  handleFilterChange = event => {\n    const item = event.target.name;\n    const isChecked = event.target.checked;\n    this.setState({ checkedFilters: this.state.checkedFilters.set(item, isChecked) });\n  }\n\n  componentDidMount() {\n    this.searchAll();\n\n    window.addEventListener('scroll', debounce(() => {\n      console.log('scrolling stopped');\n      this.setState({ pagination: this.state.pagination + 1 });\n      console.log(this.state);\n      this.updateAll();\n    }, 1000));\n\n  }\n\n  searchAll(){\n    searchEpisode(this.state.searchValue, 1)\n    .then(jsonData => {\n      jsonData = jsonData.data.episodes;\n      this.setState({ maxPageEpisodes: jsonData.info.pages, data_episodes: jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_episodes: []});\n    });\n\n    searchCharacter(this.state.searchValue, 1)\n    .then(jsonData => {\n      jsonData = jsonData.data.characters;\n      this.setState({ maxPageCharacters: jsonData.info.pages, data_characters: jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_characters: []});\n    });\n\n    searchLocation(this.state.searchValue, 1)\n    .then(jsonData => {\n      jsonData = jsonData.data.locations;\n      this.setState({ maxPageLocations: jsonData.info.pages, data_locations: jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_locations: []});\n    });\n  }\n\n  updateAll(){\n    if (this.state.maxPageEpisodes + 1 > this.state.pagination){\n      this.setState({ loadingEpisodes: true });\n      searchEpisode(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        jsonData = jsonData.data.episodes;\n        this.setState({ data_episodes: [...this.state.data_episodes,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})],\n                        loadingEpisodes: false });\n      })\n      .catch((err) => {\n        this.setState({ loadingEpisodes: false, data_episodes: this.state.data_episodes});\n      });\n    }\n\n    if (this.state.maxPageCharacters + 1 > this.state.pagination){\n      this.setState({ loadingCharacters: true });\n      searchCharacter(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        jsonData = jsonData.data.characters;\n        this.setState({ data_characters: [...this.state.data_characters,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})],\n                        loadingCharacters: false});\n      })\n      .catch((err) => {\n        this.setState({ loadingCharacters: false, data_characters: this.state.data_characters});\n      });\n    }\n\n    if (this.state.maxPageLocations + 1 > this.state.pagination){\n      this.setState({ loadingLocations: true });\n      searchLocation(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        jsonData = jsonData.data.locations;\n        this.setState({ data_locations: [...this.state.data_locations,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})],\n                        loadingLocations: false});\n      })\n      .catch((err) => {\n        this.setState({ loadingLocations: false, data_locations: this.state.data_locations});\n      });\n    }\n  }\n\n  addPage = (type, data, currentPages) => {\n    this.setState({pages: [...currentPages, {\"type\": type, \"data\": data}]});\n  }\n\n  popPage = (currentPages) => {\n    let newPages = currentPages;\n    newPages.pop();\n    this.setState({pages: newPages});\n  }\n\n  renderDetailPages(){\n    if (this.state.pages.length > 0){\n      const current = this.state.pages[this.state.pages.length -1];\n      if (current.type === \"episode\"){\n        return(\n          <EpisodeDetail data={current.data}\n                         addPage={this.addPage}\n                         currentPages={this.state.pages}\n                         previous={this.state.pages.length > 1}\n                         goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"character\"){\n        return(\n          <CharacterDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"location\"){\n        return(\n          <LocationDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n    }\n  }\n\n  renderSearchResults(){\n    if (this.state.data_episodes ||  this.state.data_locations || this.state.data_characters) {\n      return (\n        <div className=\"row\">\n          {(this.state.checkedFilters.get(\"check-1-episode\")) ?\n            this.state.data_episodes.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <EpisodeCard episode={item.data} />\n              </div>\n              )\n          }) : null}\n          {(this.state.checkedFilters.get(\"check-2-character\")) ?\n            this.state.data_characters.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <CharacterCard character={item.data} />\n              </div>\n              )\n          }) : null}\n          {(this.state.checkedFilters.get(\"check-3-location\")) ?\n            this.state.data_locations.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <LocationCard location={item.data} />\n              </div>\n              )\n          }) : null}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>\n          <p>No results</p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"body-content\">\n        <img id=\"rick-image\" src={require('./rick.png')} alt=\"\" />\n        <img id=\"morty-image\" src={require('./morty.png')} alt=\"\" />\n        <div className=\"container header-title\">\n          <h1 className=\"text-center\">Rick and Morty Search Engine</h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\" id=\"search-data\">\n              <div id=\"search-bar\" className=\"row\">\n                <div className=\"col-sm-12\">\n                  <input className=\"form-control\"\n                       name=\"text\"\n                       type=\"text\"\n                       placeholder=\"Search\"\n                       onChange={event => this.handleOnChange(event)}\n                       value={this.state.searchValue}/>\n                </div>\n                <div className=\"col-sm-12\">\n                  <label key=\"checkbox1\">\n                    Episode\n                    <input type=\"checkbox\" name=\"check-1-episode\" checked={this.state.checkedFilters.get(\"check-1-episode\")} onChange={this.handleFilterChange} />\n                  </label>\n                  <label key=\"checkbox2\">\n                    Character\n                    <input type=\"checkbox\" name=\"check-2-character\" checked={this.state.checkedFilters.get(\"check-1-character\")} onChange={this.handleFilterChange} />\n                  </label>\n                  <label key=\"checkbox3\">\n                    Location\n                    <input type=\"checkbox\" name=\"check-3-location\" checked={this.state.checkedFilters.get(\"check-1-location\")} onChange={this.handleFilterChange} />\n                  </label>\n                </div>\n              </div>\n              <br/>\n              <br/>\n              <div id=\"search-results\">\n                  { this.renderSearchResults() }\n\n                  { (this.state.loadingCharacters | this.state.loadingLocations | this.state.loadingEpisodes)  ?\n                  <div className=\"col-sm-12 div-link search-result\" style={{textAlign: \"center\"}}>\n                    <ClipLoader\n                      size={80}\n                      color={\"rgba(38,198,218, 0.56)\"}\n                      loading={(this.state.loadingCharacters | this.state.loadingLocations | this.state.loadingEpisodes)}\n                    />\n                  </div>\n                  :\n                  null\n                  }\n\n              </div>\n            </div>\n            <div className=\"container pages\">\n              <div className=\"row justify-content-end\">\n                <div className=\"col-sm-6\">\n                  { this.renderDetailPages() }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"end-box\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}